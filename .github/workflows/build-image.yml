name: Build Container Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check commit message
        id: commit_check
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "Commit message check not required for pull requests."
          else
            if [[ ${{ github.event.commits.*.message }} == *"BUILD_CONTAINER_IMAGE"* ]]; then
              echo "Commit message contains BUILD_CONTAINER_IMAGE."
              echo "::set-output name=build_trigger::true"
            else
              echo "Commit message does not contain BUILD_CONTAINER_IMAGE."
              echo "::set-output name=build_trigger::false"
            fi
          fi

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo usermod -aG docker $USER
          sudo systemctl restart docker

      - name: Build and push Docker image
        if: ${{ steps.commit_check.outputs.build_trigger == 'true' || github.event_name == 'pull_request' }}
        run: |
          docker build -t your-username/guestbook-go:${{ github.sha }} guestbook-go
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push harsshh/guestbook-go:${{ github.sha }}

  protect_main:
    runs-on: ubuntu-latest
    steps:
      - name: Protect main branch
        run: |
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.repository }}
          BRANCH="main"
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          URL="https://api.github.com/repos/$OWNER/$REPO/branches/$BRANCH/protection"
          DATA="{\"enforce_admins\": true, \"required_pull_request_reviews\": {\"required_approving_review_count\": 1}}"

          curl -X PUT -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" -d "$DATA" $URL
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
