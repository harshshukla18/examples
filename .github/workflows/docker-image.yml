# # # name: Docker Build and Push

# # # on:
# # #   workflow_dispatch:
# # #   push:
# # #     branches:
# # #       - main

# # # jobs:
# # #   build:
# # #     runs-on: ubuntu-latest

# # #     steps:
# # #       - name: Checkout Repository
# # #         uses: actions/checkout@v2

# # #       - name: Set up Docker Buildx
# # #         uses: docker/setup-buildx-action@v1

# # #       - name: Login to Docker Hub
# # #         uses: docker/login-action@v1
# # #         with:
# # #           username: ${{ secrets.DOCKER_USERNAME }}
# # #           password: ${{ secrets.DOCKER_PASSWORD }}

# # #       - name: Build and Push Docker Image
# # #         run: |
# # #           docker buildx build --tag harsshh/guest-book:${{ github.sha }} -f guestbook-go/Dockerfile .github/workflows/
# # #           docker buildx build --tag harsshh/guestbook-go:latest -f guestbook-go/Dockerfile .github/workflows/
# # #           docker push harsshh/guestbook-go:${{ github.sha }}
# # #           docker push harsshh/guestbook-go:latest


# # name: Build and Push Docker Image

# # on:
# #   workflow_dispatch:
# #   push:
# #     branches:
# #       - main

# # jobs:
# #   build-and-push:
# #     runs-on: ubuntu-latest

# #     steps:
# #     - name: Checkout Repository
# #       uses: actions/checkout@v2

# #     - name: Set up Docker Buildx
# #       uses: docker/setup-buildx-action@v1

# #     - name: Build Docker Image
# #       run: |
# #         docker buildx create --name mybuilder
# #         docker buildx create use mybuilder
# #         docker buildx build --t myimage:latest guestbook-go/Dockerfile .
# #         docker buildx rm mybuilder

# #       env:
# #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
# #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

# #     - name: Push Docker Image
# #       run: |
# #         echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
# #         docker push yourusername/myimage:latest

# #       env:
# #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
# #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


        
# name: Build Docker Image

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Build and Push Docker Image
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         push: true
#         tags: harsshh/myimage:latest guestbook-go/Dockerfile

#       env:
#         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

name: Build Container Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check commit message
        id: commit_check
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "Commit message check not required for pull requests."
          else
            if [[ ${{ github.event.commits.*.message }} == *"BUILD_CONTAINER_IMAGE"* ]]; then
              echo "Commit message contains BUILD_CONTAINER_IMAGE."
              echo "::set-output name=build_trigger::true"
            else
              echo "Commit message does not contain BUILD_CONTAINER_IMAGE."
              echo "::set-output name=build_trigger::false"
            fi
          fi

      - name: Set up Docker
        uses: docker/setup-docker@v2
        with:
          dockerfile: guestbook-go/Dockerfile

      - name: Build and push Docker image
        if: ${{ steps.commit_check.outputs.build_trigger == 'true' || github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: harsshh/guestbook-go:${{ github.sha }}

  protect_main:
    runs-on: ubuntu-latest
    steps:
      - name: Protect main branch
        uses: actions/github-script@v5
        with:
          script: |
            github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              enforce_admins: true,
              required_pull_request_reviews: {
                required_approving_review_count: 1
              }
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

